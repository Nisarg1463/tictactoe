{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Game","_useState","useState","Array","fill","_useState2","_slicedToArray","history","setHistory","_useState3","_useState4","changeHistory","setchangeHistory","_useState5","_useState6","currentMove","setCurrentMove","_useState7","_useState8","descending","setDescending","xIsNext","currentSquares","at","moves","map","squares","move","description","length","React","createElement","key","className","onClick","Board","onPlay","nextSquares","i","nextHistory","concat","_toConsumableArray","slice","Math","floor","type","id","onChange","htmlFor","_ref","_step","draw","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","winner","status","cells","calculateWinner","board","_loop","row","_loop2","j","Square","onSquareClick","clickHandler","helpedWinning","includes","BoardRow","Fragment","_ref2","_ref2$helpedWinning","classname","console","log","lines","_lines$i","a","b","c","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.d98aaa91.chunk.js","sourcesContent":["import { useState } from 'react'\nimport React from 'react'\nimport './App.css'\n\nfunction App() {\n  return <Game />\n}\n\nfunction Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)])\n  const [changeHistory, setchangeHistory] = useState([Array(2).fill(null)])\n  const [currentMove, setCurrentMove] = useState(0)\n  const [descending, setDescending] = useState(false)\n  const xIsNext = currentMove % 2 === 0\n  const currentSquares = history.at(currentMove)\n\n  function handlePlay(nextSquares, i) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares]\n    setHistory(nextHistory)\n    setchangeHistory([...changeHistory, [Math.floor(i / 3) + 1, (i % 3) + 1]])\n    setCurrentMove(nextHistory.length - 1)\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove)\n  }\n\n  const moves = history.map((squares, move) => {\n    let description\n    if (descending) {\n      move = history.length - 1 - move\n    }\n    if (move === history.length - 1) {\n      description = 'You are at move #' + move\n    } else if (move > 0) {\n      description =\n        'Go to move #' +\n        move +\n        '(' +\n        changeHistory[move][0] +\n        ',' +\n        changeHistory[move][1] +\n        ')'\n    } else {\n      description = 'Go to game start'\n    }\n    return (\n      <li key={move} className=\"history\">\n        {move === history.length - 1 ? (\n          description\n        ) : (\n          <button onClick={() => jumpTo(move)}>{description}</button>\n        )}\n      </li>\n    )\n  })\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <div>\n          <b className=\"descending\">Descending:</b>\n          <input\n            type=\"checkbox\"\n            id=\"switch\"\n            className=\"checkbox toggle\"\n            onChange={() => setDescending(!descending)}\n          />\n          <label htmlFor=\"switch\" className=\"toggle\"></label>\n        </div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  )\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  let draw = true\n  for (let i of squares) {\n    if (!i) {\n      draw = false\n    }\n  }\n\n  const cells = calculateWinner(squares)\n  let winner\n  if (cells) {\n    winner = squares[cells[0]]\n  }\n  let status\n  if (winner) {\n    status = 'Winner: ' + winner\n  } else if (draw) {\n    status = 'Match draw'\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O')\n  }\n\n  function clickHandler(i) {\n    if (squares[i] || calculateWinner(squares)) return\n    const nextSquares = squares.slice()\n    if (xIsNext) {\n      nextSquares[i] = 'X'\n    } else {\n      nextSquares[i] = 'O'\n    }\n    onPlay(nextSquares, i)\n  }\n\n  let board = []\n  for (let i = 0; i < 3; i++) {\n    let row = []\n    for (let j = 0; j < 3; j++) {\n      row = [\n        ...row,\n        <Square\n          value={squares[i * 3 + j]}\n          onSquareClick={() => clickHandler(i * 3 + j)}\n          helpedWinning={cells ? cells.includes(i * 3 + j) : false}\n        />,\n      ]\n    }\n    board = [...board, BoardRow(row)]\n  }\n\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {board}\n    </>\n  )\n}\n\nfunction BoardRow(squares) {\n  return <div className=\"board-row\">{squares}</div>\n}\n\nfunction Square({ value, onSquareClick, helpedWinning = false }) {\n  let classname = 'square'\n  if (helpedWinning) classname = classname + ' highlight'\n  console.log(classname)\n  console.log(value)\n  return (\n    <button className={classname} onClick={onSquareClick}>\n      {value}\n    </button>\n  )\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i]\n    if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c]) {\n      return lines[i]\n    }\n  }\n\n  return null\n}\n\nexport default Game\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst root = ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}